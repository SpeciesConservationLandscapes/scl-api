# Generated by Django 2.2.24 on 2022-03-29 20:27

from decimal import Decimal
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0010_auto_20220329_1441'),
    ]

    operations = [
        migrations.CreateModel(
            name='RestorationFragmentLandscape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('lsid', models.PositiveIntegerField(verbose_name='landscape ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'restoration landscape fragment',
                'verbose_name_plural': 'restoration landscape fragments',
            },
        ),
        migrations.CreateModel(
            name='RestorationFragmentStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, geography=True, null=True, srid=4326)),
                ('area', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11)),
                ('biome_areas', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'restoration fragment statistics',
                'verbose_name_plural': 'restoration fragment statistics',
                'ordering': ('country', 'restoration_fragment__date'),
            },
        ),
        migrations.CreateModel(
            name='SpeciesFragmentLandscape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('lsid', models.PositiveIntegerField(verbose_name='landscape ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'species conservation landscape fragment',
                'verbose_name_plural': 'species conservation landscape fragments',
            },
        ),
        migrations.CreateModel(
            name='SpeciesFragmentStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, geography=True, null=True, srid=4326)),
                ('area', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11)),
                ('biome_areas', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'species fragment statistics',
                'verbose_name_plural': 'species fragment statistics',
                'ordering': ('country', 'species_fragment__date'),
            },
        ),
        migrations.CreateModel(
            name='SurveyFragmentLandscape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('lsid', models.PositiveIntegerField(verbose_name='landscape ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'survey landscape fragment',
                'verbose_name_plural': 'survey landscape fragments',
            },
        ),
        migrations.CreateModel(
            name='SurveyFragmentStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, geography=True, null=True, srid=4326)),
                ('area', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11)),
                ('biome_areas', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'survey fragment statistics',
                'verbose_name_plural': 'survey fragment statistics',
                'ordering': ('country', 'survey_fragment__date'),
            },
        ),
        migrations.RemoveField(
            model_name='fragmentstats',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='fragmentstats',
            name='fragment',
        ),
        migrations.RemoveField(
            model_name='fragmentstats',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='scl',
            name='sclclass',
        ),
        migrations.AddField(
            model_name='restorationlandscape',
            name='lsid',
            field=models.PositiveIntegerField(default=1, verbose_name='landscape ID'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='scl',
            name='lsid',
            field=models.PositiveIntegerField(default=1, verbose_name='landscape ID'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='surveylandscape',
            name='lsid',
            field=models.PositiveIntegerField(default=1, verbose_name='landscape ID'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='profile',
            name='countries',
            field=django_countries.fields.CountryField(blank=True, max_length=746, multiple=True),
        ),
        migrations.DeleteModel(
            name='FragmentLandscape',
        ),
        migrations.DeleteModel(
            name='FragmentStats',
        ),
        migrations.AddField(
            model_name='surveyfragmentstats',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='surveyfragmentstats_created_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='surveyfragmentstats',
            name='survey_fragment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SurveyFragmentLandscape'),
        ),
        migrations.AddField(
            model_name='surveyfragmentstats',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='surveyfragmentstats_updated_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='surveyfragmentlandscape',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='surveyfragmentlandscape_created_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='surveyfragmentlandscape',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Species'),
        ),
        migrations.AddField(
            model_name='surveyfragmentlandscape',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='surveyfragmentlandscape_updated_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='speciesfragmentstats',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='speciesfragmentstats_created_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='speciesfragmentstats',
            name='species_fragment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SpeciesFragmentLandscape'),
        ),
        migrations.AddField(
            model_name='speciesfragmentstats',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='speciesfragmentstats_updated_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='speciesfragmentlandscape',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='speciesfragmentlandscape_created_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='speciesfragmentlandscape',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Species'),
        ),
        migrations.AddField(
            model_name='speciesfragmentlandscape',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='speciesfragmentlandscape_updated_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='restorationfragmentstats',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restorationfragmentstats_created_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='restorationfragmentstats',
            name='restoration_fragment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.RestorationFragmentLandscape'),
        ),
        migrations.AddField(
            model_name='restorationfragmentstats',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restorationfragmentstats_updated_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='restorationfragmentlandscape',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restorationfragmentlandscape_created_by', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='restorationfragmentlandscape',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Species'),
        ),
        migrations.AddField(
            model_name='restorationfragmentlandscape',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restorationfragmentlandscape_updated_by', to='api.Profile'),
        ),
    ]
