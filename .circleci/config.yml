version: 2

default: &default
  docker:
    - image: circleci/python

install_dependencies: &install_dependencies
  run:
    name: Load Dependencies
    command: |
      sudo pip install fabric==2.5.0

build: &build
  run:
    name: Build
    command: ./ci_cd/build.sh ${CIRCLE_SHA1:0:7}

gcp_tasks:
  install_gcloud: &install_gcloud
    run:
      name: Install gcloud CLI
      command: |
        curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-236.0.0-linux-x86_64.tar.gz
        tar zxf google-cloud-sdk-236.0.0-linux-x86_64.tar.gz google-cloud-sdk
        ./google-cloud-sdk/install.sh --quiet
  install_cloud_sql_proxy: &install_cloud_sql_proxy
    run:
      name: Install Cloud SQL Proxy
      command: |
        sudo curl -L -o /usr/local/bin/cloud_sql_proxy https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64
        sudo chmod +x /usr/local/bin/cloud_sql_proxy
  dump_credentials: &dump_credentials
    run:
      name: Dump Google Cloud Credentials to file
      command: |
        echo ${GCP_CREDENTIAL_STRING} > "${GCP_SERVICE_ACCOUNT_KEY_FILE}"
        /home/circleci/project/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${GCP_SERVICE_ACCOUNT_KEY_FILE}
        /home/circleci/project/google-cloud-sdk/bin/gcloud --quiet config set project ${GCP_PROJECT_ID}
        rm ${GCP_SERVICE_ACCOUNT_KEY_FILE}

jobs:
  build_and_test:
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - setup_remote_docker
      - *install_dependencies
      - *build
      - run:
          name: Setup
          command: env > .env && fab buildnocache && fab up  && docker cp ./src/. api_service:/var/projects/webapp && sleep 10 && fab createdatabase && fab migrate
      - run:
          name: Test
          command: fab test

  deploy_dev_2_wip:
    <<: *default
    steps:
      - checkout
      - *install_gcloud
      - *install_cloud_sql_proxy
      - *dump_credentials
      - run:
          name: Generate app.yaml file
          command: ./ci_cd/create_app_yaml.sh
      - run:
          name: Run DB migration
          command: |
            ls -l
            DB_NAME=${GCP_DB_NAME} \
            DB_USER=$GCP_DB_USER} \
            DB_PASSWORD={GCP_DB_PASSWORD} \
            DB_HOST=${GCP_DB_HOST} \
            DB_PORT=${GCP_DB_PORT} \
            GAE_INSTANCE=TRUE \
            python ./src/manage.py migrate
      - run:
          name: Deploy to AppEngine
          command: |
            /home/circleci/project/google-cloud-sdk/bin/gcloud app deploy --stop-previous-version --promote --quiet

  deploy_dev:
    <<: *default
    steps:
      # - checkout
      # - setup_remote_docker
      - *install_dependencies
      - *build
      # - run:
      #     name: Docker image update
      #     command: |
      #         docker login -u $DOCKER_USER -p $DOCKER_PASS
      #         docker tag honeycrisp/mermaid-api:${CIRCLE_SHA1:0:7} honeycrisp/mermaid-api:mermaid-dev-api
      #         docker push honeycrisp/mermaid-api:mermaid-dev-api
      # - run:
      #     name: Deploy
      #     command: |
      #         ./ci_cd/deploy.sh mermaid-dev-api ${CIRCLE_SHA1:0:7} Mermaid-API
      #         python ci_cd/wait_for_ok.py mermaid-dev-api ${CIRCLE_SHA1:0:7}
      # - run:
      #     name: Update version
      #     command: |
      #         python ci_cd/update_version.py dev api "${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:7}"

  deploy_prod:
    <<: *default
    steps:
      # - checkout
      # - setup_remote_docker
      - *install_dependencies
      - *build
      # - run:
      #     name: Docker image update
      #     command: |
      #         docker login -u $DOCKER_USER -p $DOCKER_PASS
      #         docker tag honeycrisp/mermaid-api:${CIRCLE_SHA1:0:7} honeycrisp/mermaid-api:mermaid-prod-api
      #         docker push honeycrisp/mermaid-api:mermaid-prod-api
      # - run:
      #     name: Deploy
      #     command: |
      #         ./ci_cd/deploy.sh mermaid-prod-api ${CIRCLE_SHA1:0:7} Mermaid-API
      #         python ci_cd/wait_for_ok.py mermaid-prod-api ${CIRCLE_SHA1:0:7}
      # - run:
      #     name: Update version
      #     command: |
      #         python ci_cd/update_version.py prod api ${CIRCLE_TAG}
      # - run:
      #     name: Update changelog
      #     command: |
      #         chlog

#workflows:
#  version: 2
#  build_test_deploy:
#    jobs:
#      - build_and_test:
#          context: org-global
#          filters:
#            tags:
#              only: /.*/
#      # branch: develop
#
#      - deploy_dev_2_wip:
#          context: org-global
#          filters:
#            branches:
#              only: S31
#          requires:
#              - build_and_test
#
#      - deploy_develop:
#          context: org-global
#          filters:
#            branches:
#              only: develop
#          requires:
#            - build_and_test
#      # tag: v1.2.3
#      - deploy_prod:
#          context: org-global
#          filters:
#            branches:
#              ignore: /.*/  # IMPORTANT!
#            tags:
#              only: /v[0-9]+(\.[0-9]+)+/ # v1.2.3
#          requires:
#            - build_and_test

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - deploy_dev_2_wip:
          context: org-global
          filters:
            branches:
              only: S31
